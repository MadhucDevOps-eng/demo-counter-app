pipeline{

    agent any

    parameters{

        choice(name: 'action',choices:'create\ndestroy\ndestroyekscluster',description:'create/update or destroy the ekscluster')

        string(name: 'cluster',defaultvalue:'demo-cluster',description:'Eks cluster name')

        string(name: 'region',defaultvalue:'ap-south-1',description:'Eks cluster region')

    }

    environment{
        ACCESS_KEY= crendentials('aws_access_key_id')

        SECRET_KEY= credentials('aws_secret_access_key')
    }

    stages{

        stage('git checkout'){

            steps{

                git branch:'main',url:''


            }

        }

        stage('eks connect'){

            steps{

                sh """

                    aws configure set aws_access_key_id "$ACCESS_KEY"

                    aws configure set aws_secret_access_key "$SECRET_KEY"

                    aws configure set region ""

                    aws eks --region ${params.region} update-kubeconfig --name ${params.cluster}

                    """;

             


            }

            stage('eks deployments'){

                when{ expression {params.action =='create'}}

                steps{

                    script{

                        def apply = false

                        try{
                            input message:'please conform the apply to initiate the deployments', ok:'Ready to apply config'

                            apply =true

                        }

                        catch(err){

                            apply = false

                            currentBuild.result ='UNSTABLE'

                        }

                        if(apply){

                            sh """

                            kubectl apply -f .

                            """;
                        }
                        }
                        }
                    }
                }
            }


        }
    }
}